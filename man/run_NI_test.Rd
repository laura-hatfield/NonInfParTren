% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/non-inf_tests.R
\name{run_NI_test}
\alias{run_NI_test}
\title{Fit reduced and expanded models}
\usage{
run_NI_test(
  data,
  reduced,
  expanded,
  lincom_var,
  robust = TRUE,
  cluster = FALSE,
  weight = FALSE,
  null_reduced = FALSE,
  alpha = 0.05
)
}
\arguments{
\item{data}{Data frame containing all the variables in the reduced and expanded models, the cluster variable (if any), and the weight variable (if any).}

\item{reduced}{Formula object giving the reduced model form.}

\item{expanded}{Formula object giving the expanded model form.}

\item{lincom_var}{Character containing a string found (only!) in the variables that will be average together.}

\item{robust}{Logical indicating whether to use heteroskedasticity-robust standard errors. Default is `TRUE`.}

\item{cluster}{Character containing the name of the cluster variable in the data OR logical FALSE indicating no clustering. Default is `FALSE`.}

\item{weight}{Character containing the name of the weight variable in the data OR logical FALSE indicating no weights. Default is `FALSE`.}

\item{null_reduced}{Logical indicating whether to use the reduced model's residuals in the covariance calculations. Default is `FALSE`; see Appendix B of Bilinski and Hatfield Stat Med (2025) for more detail.}

\item{alpha}{Numerical value of the type I error rate to use in constructing confidence intervals. Default is 0.05.}
}
\value{

}
\description{
`run_NI_test()` fits the reduced and expanded models to the data, computes linear combinations of their coefficients, and tests the difference
}
\details{
Fit reduced and expanded models


Both models must contain at least one variable with `lincom_var` in the name, but there are otherwise no required to have any relationship to the reduced model. A helpful way of adding parameters to your model is to construct them using `update.formula()`, for example, `expanded = update.formula(reduced_model,"~. + treat:year")`
Note that this means you should create your own interaction variable in the data if your treatment effects are interaction terms. For instance, if you have variables `post.month` and `treat`, create a variable in the data called `post.by.treat` rather than using a `post.month:treat` interaction term in your model formulas.
The linear combination is simply the average of all the coefficients corresponding to `lincom_var` in each model.
}
\examples{
data("depcov")

# Reduced model is described in Bilinski and Hatfield
# it omits the unemployment control variable from Ankosa-Antwi et al.

red.mod <- as.formula(paste(instype[k],"~",paste(c("fipstate","factor(trend)",
  "enact.trt.month","impl.trt.month", # these are treat.by.post
  "female","hispanic","white", "asian", "other",
  "mar", "student","fpl_ratio","fpl_ratio_2",paste0("age",c(17:25,27:29))),collapse="+")))
  
# Expanded model adds treatment-group specific linear time trend
exp.mod <- update.formula(red.mod,"~ . + fedelig:trend")

# Fit both using robust standard errors, clustering, and weights
  grp.lin.yr <- run_NI_test(data=depcov,reduced = red.mod,expanded=exp.mod,lincom_var = 'impl.trt',cluster = 'fipstate',weight = 'weight')

# Show the difference and CI
grp.lin.yr$diff
grp.lin.yr$CI   
}
\seealso{
[formula], [update.formula]
}
